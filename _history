{"entries":[{"timestamp":1756091670697,"editorVersion":"8.0.16","changes":[{"type":"edited","filename":"main.blocks","patch":[{"start1":0,"length1":237,"diffs":[[1,"<xml xmlns=\"http://www.w3.org/1999/xhtml\">\n  <block type=\"pxt-on-start\"></block>\n  <block type=\"device_forever\"></block>\n</xml>"]]}]},{"type":"edited","filename":"main.ts","patch":[{"start1":0,"length1":713,"diffs":[[1,""]]},{"start1":1,"length1":1994,"diffs":[[1,""]]}]},{"type":"edited","filename":"pxt.json","patch":[{"start1":124,"length1":84,"diffs":[[1,"        \"microphone\": \"*\"\n"]]},{"start1":214,"length1":39,"diffs":[[1,"        \"README.md\"\n"]]},{"start1":241,"length1":75,"diffs":[[1,"    \"additionalFilePaths\": []\n"]]}]},{"type":"added","filename":"test.ts","value":"// les tests vont ici ; cela ne sera pas compilé si ce paquet est utilisé en tant qu'extension.\n"},{"type":"added","filename":"main.py","value":"\"\"\"\n\nNote: The variable \"black_line\" is used as a reference for the micro:bot to determine what it is driving on.\n\n\"\"\"\n\ndef on_button_pressed_a():\n    global black_line\n    black_line = pins.analog_read_pin(AnalogReadWritePin.P1)\n    serial.write_string(\"black_line_(i.e._Baseline_Value_of_Line_Following_Sensor_on_P1)=\")\n    serial.write_line(\"\" + str((black_line)))\ninput.on_button_pressed(Button.A, on_button_pressed_a)\n\ncurrent_surface_reading = 0\nblack_line = 0\nserial.redirect_to_usb()\nmotobit.invert(Motor.LEFT, True)\nmotobit.invert(Motor.RIGHT, True)\nblack_line = pins.analog_read_pin(AnalogReadWritePin.P1)\nserial.write_string(\"black_line_(i.e._Baseline_Value_of_Line_Following_Sensor_on_P1)=\")\nserial.write_line(\"\" + str((black_line)))\n\"\"\"\n\nNote: If the line following sensor connected to P1 sees a black line, move backward and pivot to the left. We'll need to take a few more steps back to make sure that we do not get stuck in the same place. The reading can vary depending on the material that you are using for a black line. For black electrical tape, this is about ~800.\n\nIt takes a few more seconds for the micro:bit to react when using the LED array and sending serial data. We'll want short delays so that there is enough time for the micro:bot to read the surface.\n\n\"\"\"\n\"\"\"\n\nNote: This part of the code drives the micro:bot forward slowly if we do not see a black line.\n\n\"\"\"\n\ndef on_forever():\n    global current_surface_reading\n    current_surface_reading = pins.analog_read_pin(AnalogReadWritePin.P1)\n    serial.write_line(\"\" + str((current_surface_reading)))\n    if current_surface_reading >= black_line - 100:\n        motobit.enable(MotorPower.ON)\n        motobit.set_motor_speed(Motor.LEFT, MotorDirection.REVERSE, 40)\n        motobit.set_motor_speed(Motor.RIGHT, MotorDirection.REVERSE, 40)\n        basic.show_leds(\"\"\"\n            . # . # .\n            . # # # .\n            # # # # #\n            . # # # .\n            . . # . .\n            \"\"\")\n        basic.pause(10)\n        motobit.set_motor_speed(Motor.LEFT, MotorDirection.REVERSE, 30)\n        motobit.set_motor_speed(Motor.RIGHT, MotorDirection.FORWARD, 40)\n        basic.show_leds(\"\"\"\n            # # # . .\n            # # . . .\n            # . # . .\n            . . # . .\n            . . # . .\n            \"\"\")\n        basic.pause(5)\n        motobit.enable(MotorPower.OFF)\n    else:\n        motobit.enable(MotorPower.ON)\n        motobit.set_motor_speed(Motor.LEFT, MotorDirection.FORWARD, 40)\n        motobit.set_motor_speed(Motor.RIGHT, MotorDirection.FORWARD, 40)\n        basic.show_leds(\"\"\"\n            . . # . .\n            . # # # .\n            # . # . #\n            . . # . .\n            . . # . .\n            \"\"\")\n        basic.pause(5)\n        motobit.enable(MotorPower.OFF)\nbasic.forever(on_forever)\n"}]}],"snapshots":[{"timestamp":1756091670696,"editorVersion":"8.0.16","text":{"main.blocks":"<xml xmlns=\"http://www.w3.org/1999/xhtml\">\n  <block type=\"pxt-on-start\"></block>\n  <block type=\"device_forever\"></block>\n</xml>","main.ts":"\n","README.md":"","pxt.json":"{\n    \"name\": \"(tuto) stay in box\",\n    \"description\": \"\",\n    \"dependencies\": {\n        \"core\": \"*\",\n        \"radio\": \"*\",\n        \"microphone\": \"*\"\n    },\n    \"files\": [\n        \"main.blocks\",\n        \"main.ts\",\n        \"README.md\"\n    ],\n    \"additionalFilePaths\": []\n}\n"}}],"shares":[],"lastSaveTime":1756091775762}